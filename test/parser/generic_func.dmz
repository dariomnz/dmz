// RUN: compiler %s -ast-dump 2>&1 | filecheck %s

extern fn printf(fmt:*u8, ...) -> i32;

fn print<T>(param:T) -> void? {
    printf("Pointer of type %d\n", param);
}
// CHECK: FunctionDecl print<T> -> void?
// CHECK-NEXT:   ParamDecl:T param
// CHECK-NEXT:   Block
// CHECK-NEXT:     CallExpr
// CHECK-NEXT:       DeclRefExpr printf
// CHECK-NEXT:       StringLiteral '"Pointer of type %d\n"'
// CHECK-NEXT:       DeclRefExpr param

fn main() -> void {
    print<i32>(123);
    print(123);
}

// CHECK: FunctionDecl main -> void
// CHECK-NEXT:   Block
// CHECK-NEXT:     CallExpr<i32>
// CHECK-NEXT:       DeclRefExpr print
// CHECK-NEXT:       IntLiteral '123'
// CHECK-NEXT:     CallExpr
// CHECK-NEXT:       DeclRefExpr print
// CHECK-NEXT:       IntLiteral '123'