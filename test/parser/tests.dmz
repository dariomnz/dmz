// RUN: compiler %s -ast-dump -module 2>&1 | filecheck %s

fn add(x:i32, y:i32) -> i32 {
    return x + y;
}

test "add test" {
    try std.testing.expect(add(1, 1) == 2);
    try std.testing.expect(add(1, 1) == 3);
}
// CHECK: TestDecl add test
// CHECK-NEXT:   FunctionDecl add test -> Void void!
// CHECK-NEXT:     Block
// CHECK-NEXT:       TryErrorExpr 
// CHECK-NEXT:         CallExpr
// CHECK-NEXT:           MemberExpr .expect
// CHECK-NEXT:             MemberExpr .testing
// CHECK-NEXT:               DeclRefExpr std
// CHECK-NEXT:           BinaryOperator '=='
// CHECK-NEXT:             CallExpr
// CHECK-NEXT:               DeclRefExpr add
// CHECK-NEXT:               IntLiteral '1'
// CHECK-NEXT:               IntLiteral '1'
// CHECK-NEXT:             IntLiteral '2'
// CHECK-NEXT:       TryErrorExpr 
// CHECK-NEXT:         CallExpr
// CHECK-NEXT:           MemberExpr .expect
// CHECK-NEXT:             MemberExpr .testing
// CHECK-NEXT:               DeclRefExpr std
// CHECK-NEXT:           BinaryOperator '=='
// CHECK-NEXT:             CallExpr
// CHECK-NEXT:               DeclRefExpr add
// CHECK-NEXT:               IntLiteral '1'
// CHECK-NEXT:               IntLiteral '1'
// CHECK-NEXT:             IntLiteral '3'