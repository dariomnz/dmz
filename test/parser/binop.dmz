// RUN: compiler %s -ast-dump 2>&1 | filecheck %s
fn main() -> void {
    // CHECK: [[# @LINE + 1 ]]:9: error: expected expression
    1 + |;

    // CHECK: [[# @LINE + 1 ]]:13: error: expected expression
    1 + 1 + |;

    // CHECK: [[# @LINE + 1 ]]:13: error: expected expression
    1 + 1 * |;

    1 * 2 * 3;
    // CHECK: BinaryOperator '*'
    // CHECK-NEXT:   BinaryOperator '*'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 / 2 / 3;
    // CHECK: BinaryOperator '/'
    // CHECK-NEXT:   BinaryOperator '/'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 / 2 * 3;
    // CHECK: BinaryOperator '*'
    // CHECK-NEXT:   BinaryOperator '/'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 + 2 + 3;
    // CHECK: BinaryOperator '+'
    // CHECK-NEXT:   BinaryOperator '+'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'
    
    1 - 2 - 3;
    // CHECK: BinaryOperator '-'
    // CHECK-NEXT:   BinaryOperator '-'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 + 2 - 3;
    // CHECK: BinaryOperator '-'
    // CHECK-NEXT:   BinaryOperator '+'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 + 2 * 3 + 4;
    // CHECK: BinaryOperator '+'
    // CHECK-NEXT:   BinaryOperator '+'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     BinaryOperator '*'
    // CHECK-NEXT:       IntLiteral '2'
    // CHECK-NEXT:       IntLiteral '3'
    // CHECK-NEXT:   IntLiteral '4'

    1 + 2 / 3 - 4;
    // CHECK: BinaryOperator '-'
    // CHECK-NEXT:   BinaryOperator '+'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     BinaryOperator '/'
    // CHECK-NEXT:       IntLiteral '2'
    // CHECK-NEXT:       IntLiteral '3'
    // CHECK-NEXT:   IntLiteral '4'

    1 < 2 < 3;
    // CHECK: BinaryOperator '<'
    // CHECK-NEXT:   BinaryOperator '<'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 > 2 > 3;
    // CHECK: BinaryOperator '>'
    // CHECK-NEXT:   BinaryOperator '>'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 == 2 == 3;
    // CHECK: BinaryOperator '=='
    // CHECK-NEXT:   BinaryOperator '=='
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 && 2 && 3;
    // CHECK: BinaryOperator '&&'
    // CHECK-NEXT:   BinaryOperator '&&'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 || 2 || 3;
    // CHECK: BinaryOperator '||'
    // CHECK-NEXT:   BinaryOperator '||'
    // CHECK-NEXT:     IntLiteral '1'
    // CHECK-NEXT:     IntLiteral '2'
    // CHECK-NEXT:   IntLiteral '3'

    1 || 2 && 3 && (4 || 5);
    // CHECK: BinaryOperator '||'
    // CHECK-NEXT:   IntLiteral '1'
    // CHECK-NEXT:   BinaryOperator '&&'
    // CHECK-NEXT:     BinaryOperator '&&'
    // CHECK-NEXT:       IntLiteral '2'
    // CHECK-NEXT:       IntLiteral '3'
    // CHECK-NEXT:     GroupingExpr
    // CHECK-NEXT:       BinaryOperator '||'
    // CHECK-NEXT:         IntLiteral '4'
    // CHECK-NEXT:         IntLiteral '5'
}
