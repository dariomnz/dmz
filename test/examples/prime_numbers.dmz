// RUN: compiler %s -run | filecheck %s

// CHECK: 2
// CHECK-NEXT: 3
// CHECK-NEXT: 5
// CHECK-NEXT: 7
// CHECK-NEXT: 11
// CHECK-NEXT: 13
// CHECK-NEXT: 17
// CHECK-NEXT: 19
// CHECK-NEXT: 23
// CHECK-NEXT: 29

// CHECK-NOT: {{.*}}
fn divides(n: int, divisor: int) -> int {
    let i = 1;
    while (i <= n) {
        let d = divisor * i;

        if d == n {
            return 1;
        }

        i = i + 1;
    }

    return 0;
}

fn isPrime(x: int) -> int {
    if x == 0 || x == 1 {
        return 0;
    }

    let i = 2;
    while (i <= (x / 2)) {
        if divides(x, i) {
            return 0;
        }
        
        i = i + 1;
    }

    return 1;
}

fn main() -> void {
    let n = 1;
    let cnt = 0;

    while cnt < 10 {
        if isPrime(n) {
            println(n);
            cnt = cnt + 1;
        }

        n = n + 1;
    }
}
