// RUN: compiler %s -I std %S/../../std/std.dmz -run | filecheck %s

// CHECK: vector []
// CHECK: vector [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
// CHECK: vector [4, 5, 6, 7, 8, 9]
// CHECK-NOT: {{.*}}

const std = import("std");

fn printVector<T>(v: *std.vec<T>) -> void {
    std.io.printf("vector [");
    let slice = v.slice();
    for(0..slice.len, slice) |i, val| {
        std.io.printf("%d", *val);
        if (i != slice.len - 1) {
            std.io.printf(", ");
        }
    }
    std.io.printf("]\n");
}

fn main() -> void {
    let libc_alloc = std.mem.libc_allocator.init();
    let allocator = libc_alloc.Allocator();
    let v = std.vec<i32>.init(allocator);
    defer v.deinit();

    printVector<i32>(&v);

    let i = 0;
    while (i < 10) {
        try v.add(i);
        i = i + 1;
    }
    printVector<i32>(&v);
    
    i = 0;
    while (i < 4) {
        try v.remove(0);
        i = i + 1;
    }

    printVector<i32>(&v);
}
