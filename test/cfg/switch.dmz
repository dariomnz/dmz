// RUN: compiler %s -cfg-dump 2>&1 | filecheck %s

extern fn printf(fmt:*u8, ...) -> i32;

fn main() -> void {
    const x = 10;
    let y = 10;

    switch(x) {
        case 1 => printf("1\n");
        else   => printf("else %d\n", x);
    }
    switch(x) {
        case 10 => printf("10\n");
        else   => printf("else %d\n", x);
    }
    switch(y) {
        case 10 => printf("10\n");
        else   => printf("else %d\n", x);
    }
}
// CHECK-NEXT: main:
// CHECK-NEXT: [11 (entry)]
// CHECK-NEXT:   preds: 
// CHECK-NEXT:   succs: 10 
// CHECK-NEXT: 
// CHECK-NEXT: [10]
// CHECK-NEXT:   preds: 11 
// CHECK-NEXT:   succs: 8(U) 9 
// CHECK-NEXT:   ResolvedIntLiteral:i32 '10'
// CHECK-NEXT:   ResolvedDeclStmt
// CHECK-NEXT:   ResolvedIntLiteral:i32 '10'
// CHECK-NEXT:   ResolvedDeclStmt
// CHECK-NEXT:   ResolvedDeclRefExpr:i32 x
// CHECK-NEXT:   ResolvedSwitchStmt
// CHECK-NEXT: 
// CHECK-NEXT: [9]
// CHECK-NEXT:   preds: 10 
// CHECK-NEXT:   succs: 7 
// CHECK-NEXT:   ResolvedStringLiteral:*u8 'else %d\n'
// CHECK-NEXT:   ResolvedDeclRefExpr:i32 x
// CHECK-NEXT:   ResolvedCallExpr:i32
// CHECK-NEXT:     ResolvedExternFunctionDecl printf fn(*u8, ...)->i32
// CHECK-NEXT: 
// CHECK-NEXT: [8]
// CHECK-NEXT:   preds: 10(U) 
// CHECK-NEXT:   succs: 7 
// CHECK-NEXT:   ResolvedStringLiteral:*u8 '1\n'
// CHECK-NEXT:   ResolvedCallExpr:i32
// CHECK-NEXT:     ResolvedExternFunctionDecl printf fn(*u8, ...)->i32
// CHECK-NEXT: 
// CHECK-NEXT: [7]
// CHECK-NEXT:   preds: 8 9 
// CHECK-NEXT:   succs: 5 6(U) 
// CHECK-NEXT:   ResolvedDeclRefExpr:i32 x
// CHECK-NEXT:   ResolvedSwitchStmt
// CHECK-NEXT: 
// CHECK-NEXT: [6]
// CHECK-NEXT:   preds: 7(U) 
// CHECK-NEXT:   succs: 4 
// CHECK-NEXT:   ResolvedStringLiteral:*u8 'else %d\n'
// CHECK-NEXT:   ResolvedDeclRefExpr:i32 x
// CHECK-NEXT:   ResolvedCallExpr:i32 
// CHECK-NEXT:     ResolvedExternFunctionDecl printf fn(*u8, ...)->i32
// CHECK-NEXT: 
// CHECK-NEXT: [5]
// CHECK-NEXT:   preds: 7 
// CHECK-NEXT:   succs: 4 
// CHECK-NEXT:   ResolvedStringLiteral:*u8 '10\n'
// CHECK-NEXT:   ResolvedCallExpr:i32 
// CHECK-NEXT:     ResolvedExternFunctionDecl printf fn(*u8, ...)->i32
// CHECK-NEXT: 
// CHECK-NEXT: [4]
// CHECK-NEXT:   preds: 5 6 
// CHECK-NEXT:   succs: 2 3 
// CHECK-NEXT:   ResolvedDeclRefExpr:i32 y
// CHECK-NEXT:   ResolvedSwitchStmt
// CHECK-NEXT: 
// CHECK-NEXT: [3]
// CHECK-NEXT:   preds: 4 
// CHECK-NEXT:   succs: 1 
// CHECK-NEXT:   ResolvedStringLiteral:*u8 'else %d\n'
// CHECK-NEXT:   ResolvedDeclRefExpr:i32 x
// CHECK-NEXT:   ResolvedCallExpr:i32 
// CHECK-NEXT:     ResolvedExternFunctionDecl printf fn(*u8, ...)->i32
// CHECK-NEXT: 
// CHECK-NEXT: [2]
// CHECK-NEXT:   preds: 4 
// CHECK-NEXT:   succs: 1 
// CHECK-NEXT:   ResolvedStringLiteral:*u8 '10\n'
// CHECK-NEXT:   ResolvedCallExpr:i32 
// CHECK-NEXT:     ResolvedExternFunctionDecl printf fn(*u8, ...)->i32
// CHECK-NEXT: 
// CHECK-NEXT: [1]
// CHECK-NEXT:   preds: 2 3 
// CHECK-NEXT:   succs: 0 
// CHECK-NEXT: 
// CHECK-NEXT: [0 (exit)]
// CHECK-NEXT:   preds: 1 
// CHECK-NEXT:   succs: 