// RUN: compiler %s -llvm-dump 2>&1 | filecheck %s
// RUN: diff <(compiler %s -run 2>&1) <(echo -n -e '1\n2\n')
extern fn printf(fmt:*u8, ...) -> i32; fn println(n:i32) -> void {printf("%d\n", n);}
struct S {
  x: i32
}

fn rhs() -> i32 {
  println(1);
  return 1;
}

fn lhs() -> S {
  println(2);
  return S { x: 2 };
}

fn main() -> void {
  lhs().x = rhs();
}
// CHECK: define void @__builtin_main() {
// CHECK-NEXT: entry:
// CHECK-NEXT:   %struct.ret.tmp = alloca %assignment_operand_order.S, align 8
// CHECK-NEXT:   call void @llvm.memset.inline.p0.i64(ptr align 8 %struct.ret.tmp, i8 0, i64 4, i1 false)
// CHECK-NEXT:   %0 = call i32 @assignment_operand_order.rhs()
// CHECK-NEXT:   call void @assignment_operand_order.lhs(ptr sret(%assignment_operand_order.S) %struct.ret.tmp)
// CHECK-NEXT:   %1 = getelementptr inbounds nuw %assignment_operand_order.S, ptr %struct.ret.tmp, i32 0, i32 0
// CHECK-NEXT:   store i32 %0, ptr %1, align 4
// CHECK-NEXT:   ret void
// CHECK-NEXT: }
