// RUN: dmz %s -llvm-dump 2>&1 | filecheck %s
// RUN: diff <(dmz %s -run) <(echo -n -e '2\n10\n52\n')
extern fn printf(fmt:*u8, ...) -> i32; fn println(n:i32) -> void {printf("%d\n", n);}
fn foo(x: i32) -> i32 {
    if (x == 1) {
        return 2;

        return 3;
    } else if (x == 2) {
        return 10;

        let y: i32 = 5 + 1;
    }

    return 52;
}
// CHECK: define i32 @multiple_return_if.foo(i32 %0) {
// CHECK-NEXT: entry:
// CHECK-NEXT:   %retval = alloca i32, align 4
// CHECK-NEXT:   %x = alloca i32, align 4
// CHECK-NEXT:   call void @llvm.memset.inline.p0.i64(ptr align 8 %retval, i8 0, i64 4, i1 false)
// CHECK-NEXT:   call void @llvm.memset.inline.p0.i64(ptr align 8 %x, i8 0, i64 4, i1 false)
// CHECK-NEXT:   store i32 %0, ptr %x, align 4
// CHECK-NEXT:   %1 = load i32, ptr %x, align 4
// CHECK-NEXT:   %2 = icmp eq i32 %1, 1
// CHECK-NEXT:   br i1 %2, label %if.true, label %if.false
// CHECK-NEXT: 
// CHECK-NEXT: if.true:                                          ; preds = %entry
// CHECK-NEXT:   store i32 2, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: if.false:                                         ; preds = %entry
// CHECK-NEXT:   %3 = load i32, ptr %x, align 4
// CHECK-NEXT:   %4 = icmp eq i32 %3, 2
// CHECK-NEXT:   br i1 %4, label %if.true1, label %if.exit
// CHECK-NEXT: 
// CHECK-NEXT: if.true1:                                         ; preds = %if.false
// CHECK-NEXT:   store i32 10, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: if.exit:                                          ; preds = %if.false
// CHECK-NEXT:   br label %if.exit2
// CHECK-NEXT: 
// CHECK-NEXT: if.exit2:                                         ; preds = %if.exit
// CHECK-NEXT:   store i32 52, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: return:                                           ; preds = %if.exit2, %if.true1, %if.true
// CHECK-NEXT:   %5 = load i32, ptr %retval, align 4
// CHECK-NEXT:   ret i32 %5
// CHECK-NEXT: }

fn main() -> void {
    println(foo(1));
    println(foo(2));
    println(foo(3));
}
