// RUN: compiler %s -llvm-dump 2>&1 | filecheck %s
// RUN: compiler %s -run | ( ! grep ^ )
fn foo(x: i32) -> void {
    while (x > 1) {
        return;
    }
}
// CHECK: define void @foo(i32 %x) {
// CHECK-NEXT: entry:
// CHECK-NEXT:   br label %while.cond
// CHECK-NEXT: 
// CHECK-NEXT: while.cond:                                       ; preds = %entry
// CHECK-NEXT:   %0 = icmp sgt i32 %x, 1
// CHECK-NEXT:   br i1 %0, label %while.body, label %while.exit
// CHECK-NEXT: 
// CHECK-NEXT: while.body:                                       ; preds = %while.cond
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: while.exit:                                       ; preds = %while.cond
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: return:                                           ; preds = %while.exit, %while.body
// CHECK-NEXT:   ret void
// CHECK-NEXT: }

fn main() -> void {
    foo(2);
}
