// RUN: dmz %s -llvm-dump 2>&1 | filecheck %s
// RUN: diff <(dmz %s -run 2>&1) <(echo -n -e '0\n10\n12345\n10002345\n123456789\n')
extern fn printf(fmt:*u8, ...) -> i32; fn println(n:i32) -> void {printf("%d\n", n);}
fn main() -> void {
    println(0);
    println(10);
    println(12345);
    println(10002345);
    println(123456789);
}
// CHECK: declare i32 @printf(ptr byref(i8) %0, ...)

// CHECK: define void @println.println(i32 %0) {
// CHECK-NEXT: entry:
// CHECK-NEXT:   %n = alloca i32, align 4
// CHECK-NEXT:   call void @llvm.memset.inline.p0.i64(ptr align 8 %n, i8 0, i64 4, i1 false)
// CHECK-NEXT:   store i32 %0, ptr %n, align 4
// CHECK-NEXT:   %1 = load i32, ptr %n, align 4
// CHECK-NEXT:   %2 = call i32 (ptr, ...) @printf(ptr byref(i8) @global.str, i32 %1)
// CHECK-NEXT:   ret void
// CHECK-NEXT: }

