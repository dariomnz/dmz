// RUN: compiler %s -llvm-dump 2>&1 | filecheck %s
// RUN: compiler %s -run | grep -Plzx '\-50\n'
struct S {
  x: int,
  y: int,
}

fn foo(const s: S, const y: int) -> int {
  return s.x * -y;
}
// CHECK: define i32 @foo(ptr readonly %s, i32 %y) {
// CHECK-NEXT: entry:
// CHECK-NEXT:   %retval = alloca i32, align 4
// CHECK-NEXT:   %0 = getelementptr inbounds %struct.S, ptr %s, i32 0, i32 0
// CHECK-NEXT:   %1 = load i32, ptr %0, align 4
// CHECK-NEXT:   %2 = sub i32 0, %y
// CHECK-NEXT:   %3 = mul i32 %1, %2
// CHECK-NEXT:   store i32 %3, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: return:                                           ; preds = %entry
// CHECK-NEXT:   %4 = load i32, ptr %retval, align 4
// CHECK-NEXT:   ret i32 %4
// CHECK-NEXT: }

fn main() -> void {
  let s = S { x: 5, y: 10 };
  println(foo(s, 10));
}
