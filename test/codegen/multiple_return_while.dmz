// RUN: dmz %s -llvm-dump 2>&1 | filecheck %s
// RUN: diff <(dmz %s -run) <(echo -n -e '0\n5\n3\n')
extern fn printf(fmt:*u8, ...) -> i32; fn println(n:i32) -> void {printf("%d\n", n);}
fn foo(x: i32) -> i32 {
    let n: i32 = x;
    while (n > 10) {
        n = n - 1;
        
        if (x == 15) {
            return 3;

            return 1;
            
            if (0) {

            } else {
                return 2;
            }
        }

        return 5;
        
        return 1;
        1 + 3;
    }

    return 0;
}
// CHECK: while.exit:                                       ; preds = %while.cond
// CHECK-NEXT:   store i32 0, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: if.true:                                          ; preds = %while.body
// CHECK-NEXT:   store i32 3, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: if.exit:                                          ; preds = %while.body
// CHECK-NEXT:   store i32 5, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: return:                                           ; preds = %while.exit, %if.exit, %if.true
// CHECK-NEXT:   %5 = load i32, ptr %retval, align 4
// CHECK-NEXT:   ret i32 %5

fn main() -> void {
    println(foo(10));
    println(foo(11));
    println(foo(15));
}
