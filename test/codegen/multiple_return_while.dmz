// RUN: compiler %s -llvm-dump 2>&1 | filecheck %s
// RUN: compiler %s -run | grep -Plzx '0\n5\n3\n'
fn foo(x: int) -> int {
    let n: int = x;
    while n > 10 {
        n = n - 1;
        
        if x == 15 {
            return 3;

            return 1;
            
            if 0 {

            } else {
                return 2;
            }
        }

        return 5;
        
        return 1;
        1 + 3;
    }

    return 0;
}
// CHECK: while.exit:                                       ; preds = %while.cond
// CHECK-NEXT:   store i32 0, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: if.true:                                          ; preds = %while.body
// CHECK-NEXT:   store i32 3, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: if.exit:                                          ; preds = %while.body
// CHECK-NEXT:   store i32 5, ptr %retval, align 4
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: return:                                           ; preds = %while.exit, %if.exit, %if.true
// CHECK-NEXT:   %7 = load i32, ptr %retval, align 4
// CHECK-NEXT:   ret i32 %7

fn main() -> void {
    println(foo(10));
    println(foo(11));
    println(foo(15));
}
