// RUN: compiler %s -llvm-dump 2>&1 | filecheck %s
// RUN: diff <(compiler %s -run 2>&1) <(echo -n -e 'Num 420 cnum 100\n')

extern fn printf(fmt:*u8, ...) -> i32;

let num = 24;
const cnum = 100;
// CHECK: @num = internal global i32 24
// CHECK: @cnum = internal constant i32 100

fn main() -> void {
    num = 320;
    num = num + cnum;
    printf("Num %d cnum %d\n", num, cnum);
}
// CHECK:define void @__builtin_main() {
// CHECK-NEXT:entry:
// CHECK-NEXT:  store i32 320, ptr @num, align 4
// CHECK-NEXT:  %0 = load i32, ptr @num, align 4
// CHECK-NEXT:  %1 = add i32 %0, 100
// CHECK-NEXT:  store i32 %1, ptr @num, align 4
// CHECK-NEXT:  %2 = load i32, ptr @num, align 4
// CHECK-NEXT:  %3 = call i32 (ptr, ...) @printf(ptr @global.str, i32 %2, i32 100)
// CHECK-NEXT:  ret void
// CHECK-NEXT:}