// RUN: compiler %s -res-dump 2>&1 | filecheck %s
struct Point {
  x: int,
  y: int,
}
// CHECK: ResolvedStructDecl:Point Point
// CHECK-NEXT:   ResolvedFieldDecl:int x
// CHECK-NEXT:   ResolvedFieldDecl:int y

struct Color {
  r: int,
  g: int,
  b: int,
  p: Point,
}
// CHECK: ResolvedStructDecl:Color Color
// CHECK-NEXT:   ResolvedFieldDecl:int r
// CHECK-NEXT:   ResolvedFieldDecl:int g
// CHECK-NEXT:   ResolvedFieldDecl:int b
// CHECK-NEXT:   ResolvedFieldDecl:Point p

fn main() -> void {
  let x = Color { 
    r: 0,
    g: 1,
    b: 2,
    p: Point { x: 3 + 4, y: 4 * 9 },
  };
}
// CHECK: ResolvedFunctionDecl main -> void
// CHECK-NEXT:   ResolvedBlock
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:Color x
// CHECK-NEXT:         ResolvedStructInstantiationExpr:Color
// CHECK-NEXT:           ResolvedFieldInitStmt:int r
// CHECK-NEXT:             ResolvedIntLiteral:int '0'
// CHECK-NEXT:             | value:int 0
// CHECK-NEXT:           ResolvedFieldInitStmt:int g
// CHECK-NEXT:             ResolvedIntLiteral:int '1'
// CHECK-NEXT:             | value:int 1
// CHECK-NEXT:           ResolvedFieldInitStmt:int b
// CHECK-NEXT:             ResolvedIntLiteral:int '2'
// CHECK-NEXT:             | value:int 2
// CHECK-NEXT:           ResolvedFieldInitStmt:Point p
// CHECK-NEXT:             ResolvedStructInstantiationExpr:Point
// CHECK-NEXT:               ResolvedFieldInitStmt:int x
// CHECK-NEXT:                 ResolvedBinaryOperator:int '+'
// CHECK-NEXT:                 | value:int 7
// CHECK-NEXT:                   ResolvedIntLiteral:int '3'
// CHECK-NEXT:                   ResolvedIntLiteral:int '4'
// CHECK-NEXT:               ResolvedFieldInitStmt:int y
// CHECK-NEXT:                 ResolvedBinaryOperator:int '*'
// CHECK-NEXT:                 | value:int 36
// CHECK-NEXT:                   ResolvedIntLiteral:int '4'
// CHECK-NEXT:                   ResolvedIntLiteral:int '9'