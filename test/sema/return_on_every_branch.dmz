// RUN: (dmz %s -res-dump 2>&1 || true) | filecheck %s
// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value
fn noReturn() -> i32 {
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value on every path
fn noReturnAllBranch(x: i32) -> i32 {
    if (x == 0) {
        return 1;
    }
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value on every path
fn returnAllBranch2(x: i32) -> i32 {
    if (x == 0) {
        return 1;
    } else {
        if (x == 1) {
            return 2;
        }
    }
}

fn returnAllBranch(x: i32) -> i32 {
    if (x == 0) {
        return 1;
    } else {
        if (x == 1) {
            return 2;
        } else {
            return 3;
        }
    }
}

fn alwaysReturnIf() -> i32 {
    if (1) {
        return 0;
    }

    // unreachable
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value
fn noReturnIf() -> i32 {
    if (0) {
        // unreachable
        return 0;
    }
}

fn alwaysReturnElseIf() -> i32 {
    if (0) {
        // unreachable
        return 0;
    } else {
        if (1) {
            return 0;
        }
    }

    // unreachable
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value
fn noReturnElseIf() -> i32 {
    if (0) {
        // unreachable
        return 0;
    } else {
        if (0) {
            // unreachable
            return 0;
        }
    }
}

fn alwaysReturnElseIf2(x: i32) -> i32 {
    if (x) {
        return 0;
    } else {
        if (1) {
            return 0;
        }
    }
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value on every path
fn uknownReturnElseIf(x: i32) -> i32 {
    if (x > 1) {
        return 0;
    } else {
        if (x < 1) {
            return 0;
        } else {
            if (x == 0) {
                return 3;
            }
        }
    }
}

fn alwaysReturnWhile() -> i32 {
    while (1) {
        return 1;
    }

    // unreachable
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value
fn noReturnWhile() -> i32 {
    while (0) {
        // unreachable
        return 1;
    }
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value on every path
fn uknownReturnWhile(x: i32) -> i32 {
    while (x) {
        return 1;
    }
}

fn alwaysReturnCondition(x: i32) -> i32 {
    if (x || x || (0 - 1)) {
        return 0;
    }
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value on every path
fn noReturnCondition(x: i32) -> i32 {
    if (x && (0 - 1)) {
        return 0;
    }
}

fn alwaysReturnCondition2(x: i32) -> i32 {
    if (x && (0 - 1)) {
        return 0;
    }

    return 0;
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value
fn noReturnLoop(x: i32) -> i32 {
    while (x) {
    }
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value
fn noReturnInfiniteLoop() -> i32 {
    while (1) {
    }
}

// CHECK: [[# @LINE + 1 ]]:1: error: non-void function doesn't return a value
fn noReturnNeverRunningLoop() -> i32 {
    while (0) {
    }
}

fn returnAllPaths(x: i32) -> i32 {
    if (x || x || 1) {
        return 1;
    } else {

    }
}

fn returnAllPaths2(x: i32) -> i32 {
    if (1 && 1 && 1) {
        return 1;
    } else {

    }
}

fn returnAllPathsElse(x: i32) -> i32 {
    if (x && x && 0) {
    } else {
        return 1;
    }
}

fn returnAllPathsElse2(x: i32) -> i32 {
    if (0 || 0 || 0) {
    } else {
        return 1;
    }
}

fn main() -> void {
}

// CHECK-NOT: {{.*}}