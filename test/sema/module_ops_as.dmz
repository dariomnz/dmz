// RUN: compiler %s %S/module_ops.dmz -res-dump 2>&1 | filecheck %s

import ops as o;
// CHECK: ResolvedImportDecl ops as o
import ops::integer as i;
// CHECK: ResolvedImportDecl ops
// CHECK-NEXT:   ResolvedImportDecl ops::integer as i

fn main() -> void {
    let x = 1;
    let y = 2;

    o::print(x);

    let result = i::add(x, y);
    
    o::print(result);
}
// CHECK: ResolvedFunctionDecl main -> void
// CHECK-NEXT:   ResolvedBlock
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:int x
// CHECK-NEXT:         ResolvedIntLiteral:int '1'
// CHECK-NEXT:         | value:int 1
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:int y
// CHECK-NEXT:         ResolvedIntLiteral:int '2'
// CHECK-NEXT:         | value:int 2
// CHECK-NEXT:     ResolvedModuleDeclRefExpr o::
// CHECK-NEXT:       ResolvedCallExpr:void ops::print
// CHECK-NEXT:         ResolvedDeclRefExpr:int x
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:int result
// CHECK-NEXT:         ResolvedModuleDeclRefExpr i::
// CHECK-NEXT:           ResolvedCallExpr:int ops::integer::add
// CHECK-NEXT:             ResolvedDeclRefExpr:int x
// CHECK-NEXT:             ResolvedDeclRefExpr:int y
// CHECK-NEXT:     ResolvedModuleDeclRefExpr o::
// CHECK-NEXT:       ResolvedCallExpr:void ops::print
// CHECK-NEXT:         ResolvedDeclRefExpr:int result