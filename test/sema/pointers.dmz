// RUN: compiler %s -res-dump 2>&1 | filecheck %s
extern fn printf(fmt: *u8, ...) -> i32;

fn main() -> void {
    let i: i32 = 10;

    let i_ptr: *i32 = &i;
    let i_ptr2: *i32 = i_ptr;

    printf("%d\n", i);
    *i_ptr = 12;
    printf("%d\n", i);
}
// CHECK: ResolvedFunctionDecl main -> Void void
// CHECK-NEXT:   ResolvedBlock
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:Int i32 i
// CHECK-NEXT:         ResolvedIntLiteral:Int i32 '10'
// CHECK-NEXT:         | value: 10
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:Int *i32 i_ptr
// CHECK-NEXT:         ResolvedRefPtrExpr:Int *i32
// CHECK-NEXT:           ResolvedDeclRefExpr:Int i32 i
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:Int *i32 i_ptr2
// CHECK-NEXT:         ResolvedDeclRefExpr:Int *i32 i_ptr
// CHECK-NEXT:     ResolvedCallExpr:Int i32
// CHECK-NEXT:       ResolvedExternFunctionDecl printf -> Int i32
// CHECK-NEXT:       ResolvedStringLiteral:UInt u8[4] '%d\n'
// CHECK-NEXT:       ResolvedDeclRefExpr:Int i32 i
// CHECK-NEXT:     ResolvedAssignment
// CHECK-NEXT:       ResolvedDerefPtrExpr:Int i32
// CHECK-NEXT:         ResolvedDeclRefExpr:Int *i32 i_ptr
// CHECK-NEXT:       ResolvedIntLiteral:Int i32 '12'
// CHECK-NEXT:       | value: 12
// CHECK-NEXT:     ResolvedCallExpr:Int i32
// CHECK-NEXT:       ResolvedExternFunctionDecl printf -> Int i32
// CHECK-NEXT:       ResolvedStringLiteral:UInt u8[4] '%d\n'
// CHECK-NEXT:       ResolvedDeclRefExpr:Int i32 i