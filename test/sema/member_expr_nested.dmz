// RUN: (dmz %s -res-dump 2>&1 || true) | filecheck %s
struct S {
    x: i32,
    n: S2,
}

struct S2 {
    x: i32,
}

fn main() -> void {
    let s = S{x: 0, n: S2{x: 1}};

    let x = s.n.x;
}

// CHECK: ResolvedStructDecl member_expr_nested.S
// CHECK-NEXT:   ResolvedFieldDecl:i32 x
// CHECK-NEXT:   ResolvedFieldDecl:member_expr_nested.S2{} n
// CHECK-NEXT: ResolvedStructDecl  member_expr_nested.S2
// CHECK-NEXT:   ResolvedFieldDecl:i32 x

// CHECK-NEXT: ResolvedFunctionDecl main fn()->void
// CHECK-NEXT:   ResolvedBlock
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:member_expr_nested.S{} s
// CHECK-NEXT:         ResolvedStructInstantiationExpr:member_expr_nested.S{}
// CHECK-NEXT:           ResolvedFieldInitStmt:i32 x
// CHECK-NEXT:             ResolvedIntLiteral:i32 '0'
// CHECK-NEXT:             | value: 0
// CHECK-NEXT:           ResolvedFieldInitStmt:member_expr_nested.S2{} n
// CHECK-NEXT:             ResolvedStructInstantiationExpr:member_expr_nested.S2{}
// CHECK-NEXT:               ResolvedFieldInitStmt:i32 x
// CHECK-NEXT:                 ResolvedIntLiteral:i32 '1'
// CHECK-NEXT:                 | value: 1
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:i32 x
// CHECK-NEXT:         ResolvedMemberExpr:i32 x
// CHECK-NEXT:           ResolvedMemberExpr:member_expr_nested.S2{} n
// CHECK-NEXT:             ResolvedDeclRefExpr:member_expr_nested.S{} s