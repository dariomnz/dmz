// RUN: dmz %s -res-dump 2>&1 | filecheck %s

extern fn printf(fmt: *u8, ...) -> i32;
fn main() -> void {
    let size_bool = @sizeof(bool);
    let size_i32 = @sizeof(i32);
    let size_i64 = @sizeof(i64);
    let size_f16 = @sizeof(f16);
    let size_void_ptr = @sizeof(*void);

    printf("Sizeof bool %d\n", size_bool);
    printf("Sizeof i32 %d\n", size_i32);
    printf("Sizeof i64 %d\n", size_i64);
    printf("Sizeof f16 %d\n", size_f16);
    printf("Sizeof *void %d\n", size_void_ptr);
}

// CHECK: ResolvedFunctionDecl main fn()->void
// CHECK-NEXT:     ResolvedBlock
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:u64 size_bool
// CHECK-NEXT:           ResolvedSizeofExpr:u64
// CHECK-NEXT:             bool
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:u64 size_i32
// CHECK-NEXT:           ResolvedSizeofExpr:u64
// CHECK-NEXT:             i32
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:u64 size_i64
// CHECK-NEXT:           ResolvedSizeofExpr:u64
// CHECK-NEXT:             i64
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:u64 size_f16
// CHECK-NEXT:           ResolvedSizeofExpr:u64
// CHECK-NEXT:             f16
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:u64 size_void_ptr
// CHECK-NEXT:           ResolvedSizeofExpr:u64
// CHECK-NEXT:             *void
// CHECK-NEXT:       ResolvedCallExpr:i32
// CHECK-NEXT:         ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:         ResolvedStringLiteral:*u8 'Sizeof bool %d\n'
// CHECK-NEXT:         ResolvedDeclRefExpr:u64 size_bool
// CHECK-NEXT:       ResolvedCallExpr:i32
// CHECK-NEXT:         ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:         ResolvedStringLiteral:*u8 'Sizeof i32 %d\n'
// CHECK-NEXT:         ResolvedDeclRefExpr:u64 size_i32
// CHECK-NEXT:       ResolvedCallExpr:i32
// CHECK-NEXT:         ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:         ResolvedStringLiteral:*u8 'Sizeof i64 %d\n'
// CHECK-NEXT:         ResolvedDeclRefExpr:u64 size_i64
// CHECK-NEXT:       ResolvedCallExpr:i32
// CHECK-NEXT:         ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:         ResolvedStringLiteral:*u8 'Sizeof f16 %d\n'
// CHECK-NEXT:         ResolvedDeclRefExpr:u64 size_f16
// CHECK-NEXT:       ResolvedCallExpr:i32
// CHECK-NEXT:         ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:         ResolvedStringLiteral:*u8 'Sizeof *void %d\n'
// CHECK-NEXT:         ResolvedDeclRefExpr:u64 size_void_ptr