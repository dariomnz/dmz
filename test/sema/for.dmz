// RUN: dmz %s -res-dump 2>&1 | filecheck %s

extern fn printf(fmt: *u8, ...) -> i32;
fn main() -> void {
    for (0..10) |x| {
        printf("x: %d\n", x);
    }
    for (0..10, 5..15) |x, y| {
        printf("x: %d y: %d\n", x, y);
    }
    for (0..2) |i| {
        printf("a");
    }
    printf("\n");
}
// CHECK: ResolvedFunctionDecl main fn()->void
// CHECK-NEXT:     ResolvedBlock
// CHECK-NEXT:       ResolvedForStmt
// CHECK-NEXT:         ResolvedRangeExpr
// CHECK-NEXT:           ResolvedIntLiteral:i32 '0'
// CHECK-NEXT:           | value: 0
// CHECK-NEXT:           ResolvedIntLiteral:i32 '10'
// CHECK-NEXT:           | value: 10
// CHECK-NEXT:         ResolvedCaptureDecl:i64 x
// CHECK-NEXT:         ResolvedBlock
// CHECK-NEXT:           ResolvedCallExpr:i32
// CHECK-NEXT:             ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:             ResolvedStringLiteral:*u8 'x: %d\n'
// CHECK-NEXT:             ResolvedDeclRefExpr:i64 x
// CHECK-NEXT:       ResolvedForStmt
// CHECK-NEXT:         ResolvedRangeExpr
// CHECK-NEXT:           ResolvedIntLiteral:i32 '0'
// CHECK-NEXT:           | value: 0
// CHECK-NEXT:           ResolvedIntLiteral:i32 '10'
// CHECK-NEXT:           | value: 10
// CHECK-NEXT:         ResolvedRangeExpr
// CHECK-NEXT:           ResolvedIntLiteral:i32 '5'
// CHECK-NEXT:           | value: 5
// CHECK-NEXT:           ResolvedIntLiteral:i32 '15'
// CHECK-NEXT:           | value: 15
// CHECK-NEXT:         ResolvedCaptureDecl:i64 x
// CHECK-NEXT:         ResolvedCaptureDecl:i64 y
// CHECK-NEXT:         ResolvedBlock
// CHECK-NEXT:           ResolvedCallExpr:i32
// CHECK-NEXT:             ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:             ResolvedStringLiteral:*u8 'x: %d y: %d\n'
// CHECK-NEXT:             ResolvedDeclRefExpr:i64 x
// CHECK-NEXT:             ResolvedDeclRefExpr:i64 y
// CHECK-NEXT:       ResolvedForStmt
// CHECK-NEXT:         ResolvedRangeExpr
// CHECK-NEXT:           ResolvedIntLiteral:i32 '0'
// CHECK-NEXT:           | value: 0
// CHECK-NEXT:           ResolvedIntLiteral:i32 '2'
// CHECK-NEXT:           | value: 2
// CHECK-NEXT:         ResolvedCaptureDecl:i64 i
// CHECK-NEXT:         ResolvedBlock
// CHECK-NEXT:           ResolvedCallExpr:i32
// CHECK-NEXT:             ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:             ResolvedStringLiteral:*u8 'a'
// CHECK-NEXT:       ResolvedCallExpr:i32
// CHECK-NEXT:         ResolvedDeclRefExpr:fn(*u8, ...)->i32 printf
// CHECK-NEXT:         ResolvedStringLiteral:*u8 '\n'