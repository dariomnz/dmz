// RUN: compiler %s -res-dump 2>&1 | filecheck %s

const e = error {
    ERROR_ONE
};

fn foo(n:i32) -> i32! {
    if (n == 0) {
        return e.ERROR_ONE;
    }
    return n;
}

fn main() -> void {
    const a = foo(10) orelse 0;
    const b = foo(0) orelse foo(1) orelse 0;
}
// CHECK: ResolvedFunctionDecl main -> Void void
// CHECK-NEXT:     ResolvedBlock
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:const Int i32 a
// CHECK-NEXT:           ResolvedOrElseErrorExpr:Int i32
// CHECK-NEXT:             ResolvedCallExpr:Int i32!
// CHECK-NEXT:               ResolvedFunctionDecl foo -> Int i32!
// CHECK-NEXT:               ResolvedIntLiteral:Int i32 '10'
// CHECK-NEXT:               | value: 10
// CHECK-NEXT:             ResolvedIntLiteral:Int i32 '0'
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:const Int i32 b
// CHECK-NEXT:           ResolvedOrElseErrorExpr:Int i32
// CHECK-NEXT:             ResolvedCallExpr:Int i32!
// CHECK-NEXT:               ResolvedFunctionDecl foo -> Int i32!
// CHECK-NEXT:               ResolvedIntLiteral:Int i32 '0'
// CHECK-NEXT:               | value: 0
// CHECK-NEXT:             ResolvedOrElseErrorExpr:Int i32
// CHECK-NEXT:               ResolvedCallExpr:Int i32!
// CHECK-NEXT:                 ResolvedFunctionDecl foo -> Int i32!
// CHECK-NEXT:                 ResolvedIntLiteral:Int i32 '1'
// CHECK-NEXT:                 | value: 1
// CHECK-NEXT:               ResolvedIntLiteral:Int i32 '0'