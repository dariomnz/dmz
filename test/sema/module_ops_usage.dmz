// RUN: dmz %s -res-dump -no-remove-unused 2>&1 | filecheck %s

const ops = import("module_ops.dmz");
// CHECK:   ResolvedVarDecl:const module_ops ops
// CHECK-NEXT:     ResolvedImportExpr module_ops

fn main() -> void {
    let x = 1;
    let y = 2;

    ops.print(x);

    let result = ops.integer.add(x, y);
    
    ops.print(result);
}
// CHECK: ResolvedFunctionDecl main fn()->void
// CHECK-NEXT:   ResolvedBlock
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:i32 x
// CHECK-NEXT:         ResolvedIntLiteral:i32 '1'
// CHECK-NEXT:         | value: 1
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:i32 y
// CHECK-NEXT:         ResolvedIntLiteral:i32 '2'
// CHECK-NEXT:         | value: 2
// CHECK-NEXT:     ResolvedCallExpr:void
// CHECK-NEXT:       ResolvedMemberExpr:fn(i32)->void print
// CHECK-NEXT:         ResolvedDeclRefExpr:module_ops ops
// CHECK-NEXT:       ResolvedDeclRefExpr:i32 x
// CHECK-NEXT:     ResolvedDeclStmt
// CHECK-NEXT:       ResolvedVarDecl:i32 result
// CHECK-NEXT:         ResolvedCallExpr:i32
// CHECK-NEXT:           ResolvedMemberExpr:fn(i32, i32)->i32 add
// CHECK-NEXT:             ResolvedMemberExpr:module_ops_integer integer
// CHECK-NEXT:               ResolvedDeclRefExpr:module_ops ops
// CHECK-NEXT:           ResolvedDeclRefExpr:i32 x
// CHECK-NEXT:           ResolvedDeclRefExpr:i32 y
// CHECK-NEXT:     ResolvedCallExpr:void
// CHECK-NEXT:       ResolvedMemberExpr:fn(i32)->void print
// CHECK-NEXT:         ResolvedDeclRefExpr:module_ops ops
// CHECK-NEXT:       ResolvedDeclRefExpr:i32 result