// RUN: compiler %s -res-dump 2>&1 | filecheck %s

struct Point {
    x: i32,
    y: i32,

    fn addOne() -> void {
        .x = .x + 1;
        .y = .y + 1;
    }
// CHECK:  ResolvedMemberFunctionDecl addOne -> void
// CHECK-NEXT:    ResolvedParamDecl:*Point 
// CHECK-NEXT:    ResolvedBlock
// CHECK-NEXT:      ResolvedAssignment
// CHECK-NEXT:        ResolvedSelfMemberExpr:i32 x
// CHECK-NEXT:          ResolvedDeclRefExpr:*Point 
// CHECK-NEXT:        ResolvedBinaryOperator:i32 '+'
// CHECK-NEXT:          ResolvedSelfMemberExpr:i32 x
// CHECK-NEXT:            ResolvedDeclRefExpr:*Point 
// CHECK-NEXT:          ResolvedIntLiteral:i32 '1'
// CHECK-NEXT:      ResolvedAssignment
// CHECK-NEXT:        ResolvedSelfMemberExpr:i32 y
// CHECK-NEXT:          ResolvedDeclRefExpr:*Point 
// CHECK-NEXT:        ResolvedBinaryOperator:i32 '+'
// CHECK-NEXT:          ResolvedSelfMemberExpr:i32 y
// CHECK-NEXT:            ResolvedDeclRefExpr:*Point 
// CHECK-NEXT:          ResolvedIntLiteral:i32 '1'
}

fn main() -> void {
    let p = Point{x:1,y:1};
    p.addOne();
}

// CHECK:       ResolvedCallExpr:void
// CHECK-NEXT:         ResolvedMemberFunctionDecl addOne -> void
// CHECK-NEXT:         ResolvedRefPtrExpr:*Point{}
// CHECK-NEXT:           ResolvedDeclRefExpr:Point{} p
