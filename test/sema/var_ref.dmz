// RUN: compiler %s -res-dump 2>&1 | filecheck %s
// RUN: diff <(compiler %s -run 2>&1) <(echo -n -e '10\n10\n20\n20\n')

fn foo(x: *i32) -> void {
    println(*x);
    *x = 20;
    println(*x);
}
// CHECK: ResolvedFunctionDecl foo fn(*i32)->void
// CHECK-NEXT:    ResolvedParamDecl:*i32 x
// CHECK-NEXT:    ResolvedBlock
// CHECK-NEXT:      ResolvedCallExpr:void
// CHECK-NEXT:        ResolvedFunctionDecl println fn(i32)->void
// CHECK-NEXT:        ResolvedDerefPtrExpr:i32
// CHECK-NEXT:          ResolvedDeclRefExpr:*i32 x
// CHECK-NEXT:      ResolvedAssignment
// CHECK-NEXT:        ResolvedDerefPtrExpr:i32
// CHECK-NEXT:          ResolvedDeclRefExpr:*i32 x
// CHECK-NEXT:        ResolvedIntLiteral:i32 '20'
// CHECK-NEXT:        | value: 20
// CHECK-NEXT:      ResolvedCallExpr:void
// CHECK-NEXT:        ResolvedFunctionDecl println fn(i32)->void
// CHECK-NEXT:        ResolvedDerefPtrExpr:i32
// CHECK-NEXT:          ResolvedDeclRefExpr:*i32 x

extern fn printf(fmt:*u8, ...) -> i32; fn println(n:i32) -> void {printf("%d\n", n);}

fn main() -> void {
    let i = 10;
    let i_ptr:*i32 = &i;
    println(*i_ptr);
    foo(i_ptr);
    println(i);
}

// CHECK: ResolvedFunctionDecl main fn()->void
// CHECK-NEXT:     ResolvedBlock
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:i32 i
// CHECK-NEXT:           ResolvedIntLiteral:i32 '10'
// CHECK-NEXT:           | value: 10
// CHECK-NEXT:       ResolvedDeclStmt
// CHECK-NEXT:         ResolvedVarDecl:*i32 i_ptr
// CHECK-NEXT:           ResolvedRefPtrExpr:*i32
// CHECK-NEXT:             ResolvedDeclRefExpr:i32 i
// CHECK-NEXT:       ResolvedCallExpr:void
// CHECK-NEXT:         ResolvedFunctionDecl println fn(i32)->void
// CHECK-NEXT:         ResolvedDerefPtrExpr:i32
// CHECK-NEXT:           ResolvedDeclRefExpr:*i32 i_ptr
// CHECK-NEXT:       ResolvedCallExpr:void
// CHECK-NEXT:         ResolvedFunctionDecl foo fn(*i32)->void
// CHECK-NEXT:         ResolvedDeclRefExpr:*i32 i_ptr
// CHECK-NEXT:       ResolvedCallExpr:void
// CHECK-NEXT:         ResolvedFunctionDecl println fn(i32)->void
// CHECK-NEXT:         ResolvedDeclRefExpr:i32 i