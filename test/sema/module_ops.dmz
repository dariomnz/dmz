// RUN: compiler %s -module -res-dump -no-remove-unused 2>&1 | filecheck %s
struct str_ops {
    x:i32,
    y:i32,
    z:i32,
}

fn print(x:i32) -> void {
    println(x);
}

extern fn printf(fmt:*u8, ...) -> i32;

fn println(n:i32) -> void {
    printf("%d\n", n);
}

const integer = import("module_ops_integer.dmz");
// CHECK:   ResolvedStructDecl module_ops.str_ops
// CHECK-NEXT:     ResolvedFieldDecl:i32 x
// CHECK-NEXT:     ResolvedFieldDecl:i32 y
// CHECK-NEXT:     ResolvedFieldDecl:i32 z
// CHECK-NEXT:   ResolvedFunctionDecl print fn(i32)->void
// CHECK-NEXT:     ResolvedParamDecl:i32 x
// CHECK-NEXT:     ResolvedBlock
// CHECK-NEXT:       ResolvedCallExpr:void
// CHECK-NEXT:         ResolvedFunctionDecl println fn(i32)->void
// CHECK-NEXT:         ResolvedDeclRefExpr:i32 x
// CHECK-NEXT:   ResolvedExternFunctionDecl printf fn(*u8, ...)->i32
// CHECK-NEXT:     ResolvedParamDecl:*u8 fmt
// CHECK-NEXT:     ResolvedParamDecl:vararg ...
// CHECK-NEXT:   ResolvedFunctionDecl println fn(i32)->void
// CHECK-NEXT:     ResolvedParamDecl:i32 n
// CHECK-NEXT:     ResolvedBlock
// CHECK-NEXT:       ResolvedCallExpr:i32
// CHECK-NEXT:         ResolvedExternFunctionDecl printf fn(*u8, ...)->i32
// CHECK-NEXT:         ResolvedStringLiteral:*u8 '%d\n'
// CHECK-NEXT:         ResolvedDeclRefExpr:i32 n